/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author guest01
 */
public class PidaoKing extends javax.swing.JFrame {

    /**
     * Creates new form PidaoKing
     */
    public PidaoKing() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblResult1 = new javax.swing.JLabel();
        chkPepino = new javax.swing.JCheckBox();
        lblResult2 = new javax.swing.JLabel();
        chkTomate = new javax.swing.JCheckBox();
        chkAlface = new javax.swing.JCheckBox();
        lblMolho = new javax.swing.JLabel();
        lblPao = new javax.swing.JLabel();
        lblQtd = new javax.swing.JLabel();
        slQtd = new javax.swing.JSlider();
        lblQueijo = new javax.swing.JLabel();
        cbQueijo = new javax.swing.JComboBox<>();
        cbPao = new javax.swing.JComboBox<>();
        chkPimentao = new javax.swing.JCheckBox();
        cbMolho = new javax.swing.JComboBox<>();
        chkCebola = new javax.swing.JCheckBox();
        lblSaladas = new javax.swing.JLabel();
        chkAzeitona = new javax.swing.JCheckBox();
        bntResult = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        chkPepino.setText("Pepino");

        chkTomate.setText("Tomate");

        chkAlface.setText("Alface");
        chkAlface.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAlfaceActionPerformed(evt);
            }
        });

        lblMolho.setText("Tipo do Molho:");

        lblPao.setText("Tipo do Pão:");

        lblQtd.setText("Qtd de Habúrgueres:");

        slQtd.setMajorTickSpacing(1);
        slQtd.setMaximum(5);
        slQtd.setPaintLabels(true);
        slQtd.setPaintTicks(true);
        slQtd.setSnapToTicks(true);

        lblQueijo.setText("Tipo do Queijo:");

        cbQueijo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nenhum", "Cheddar", "Prato", "Suiço", "DobroCheddar", "Dobro Prato" }));

        cbPao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Brioche", "Australiano", "Italiano", "Sem Glúten" }));
        cbPao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPaoActionPerformed(evt);
            }
        });

        chkPimentao.setText("Pimentão");
        chkPimentao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPimentaoActionPerformed(evt);
            }
        });

        cbMolho.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nenhum", "Maionese", "Ketchup", "Barbecue", "Mostarda", "Mostarda e Mel", "Parmesão", "Cebola Agridoce" }));

        chkCebola.setText("Cebola");
        chkCebola.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkCebolaActionPerformed(evt);
            }
        });

        lblSaladas.setText("Saladas/Vegetais");

        chkAzeitona.setText("Azeitona");
        chkAzeitona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAzeitonaActionPerformed(evt);
            }
        });

        bntResult.setFont(new java.awt.Font("Franklin Gothic Book", 1, 14)); // NOI18N
        bntResult.setText("Fazer pedido");
        bntResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bntResultActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel1.setText("Ingredientes:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N
        jLabel2.setText("Valor:");

        jLabel3.setFont(new java.awt.Font("Stencil", 0, 48)); // NOI18N
        jLabel3.setText("PIDÃOKING");

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(lblResult1, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblResult2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(158, 158, 158))))
            .addGroup(layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lblQtd)
                                    .addGap(18, 18, 18))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lblPao)
                                    .addGap(30, 30, 30))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(lblMolho)
                                        .addComponent(lblQueijo))
                                    .addGap(29, 29, 29)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(slQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbPao, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbQueijo, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbMolho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblSaladas)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(chkCebola)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(chkAzeitona))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(chkAlface, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(chkPepino))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(chkPimentao)
                                        .addComponent(chkTomate)))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(32, 32, 32)
                            .addComponent(jLabel3)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(bntResult, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(70, 70, 70)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(30, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPao)
                    .addComponent(cbPao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(lblQtd)
                        .addGap(17, 17, 17))
                    .addComponent(slQtd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbQueijo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQueijo))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMolho)
                    .addComponent(cbMolho, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkAlface, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkTomate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkPimentao, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(chkPepino)
                        .addComponent(lblSaladas)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkCebola)
                    .addComponent(chkAzeitona))
                .addGap(29, 29, 29)
                .addComponent(bntResult, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblResult1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(43, 43, 43)
                                .addComponent(lblResult2))))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chkAlfaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAlfaceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkAlfaceActionPerformed

    private void cbPaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbPaoActionPerformed

    private void chkPimentaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPimentaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkPimentaoActionPerformed

    private void chkCebolaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkCebolaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkCebolaActionPerformed

    private void chkAzeitonaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAzeitonaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkAzeitonaActionPerformed
    
    private void bntResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bntResultActionPerformed
        // TODO add your handling code here:
        String Pao = (String)cbPao.getSelectedItem();
        float valorT = 10;
        
        
        if (Pao == "Brioche"){
        valorT = valorT + 5.00f;
        
        }
        if (Pao == "Australiano") {
        valorT = valorT + 7.50f;
        
        }
        if (Pao == "Italiano") {
        valorT = valorT + 7.50f;
        
        }
        if (Pao == "Sem Glúten") {
        valorT = valorT + 5.00f;
        
        }
/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        
        int Hamburguer = slQtd.getValue();
        valorT = valorT + (Hamburguer * 5.00f);
                
/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/                
                
         String Queijo = (String)cbQueijo.getSelectedItem();
         
         if(Queijo == "Nenhum") {
         valorT = valorT + 0.00f;
                 
         }   
         
         if(Queijo == "Cheddar") {
         valorT = valorT + 5.00f;   
         
         }             
         if(Queijo == "Prato") {
         valorT = valorT + 3.50f;
                 
         }             
         if(Queijo == "Suiço") {
         valorT = valorT + 4.00f;
                 
         }             
         if(Queijo == "Dobro Cheddar") {
         valorT = valorT + 9.00f;
                 
         }
         if(Queijo == "Dobro Prato") {
         valorT = valorT + 6.00f;
                 
         }
         
/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
    
         String Molho = (String)cbMolho.getSelectedItem();
         
         if(Molho == "Nenhum") {
         valorT = valorT + 0.00f;
                 
         }
         if(Molho == "Maionese") {
         valorT = valorT + 1.00f;
                 
         }
         if(Molho == "Ketchup") {
         valorT = valorT + 1.00f;
                 
         }
         if(Molho == "Barbecue") {
         valorT = valorT + 1.00f;
                 
         }
         if(Molho == "Mostarda") {
         valorT = valorT + 1.00f;
                 
         }
         if(Molho == "Mostarda e Mel") {
         valorT = valorT + 1.50f;
                 
         }
         if(Molho == "Parmesão") {
         valorT = valorT + 1.50f;
                 
         }
         if(Molho == "Cebola Agridoce") {
         valorT = valorT + 1.50f;
                 
         }
/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        String texto = "";
        if(chkPepino.isSelected()) {
        texto += "Pepino, ";
        valorT = valorT + 1.00f;
        }
        
        if(chkAlface.isSelected()) {
        texto += "Alface, ";
        valorT = valorT + 1.00f;
        }
        if(chkCebola.isSelected()) {
        texto += "Cebola, ";
        valorT = valorT + 1.00f;
        }
   
        if(chkTomate.isSelected()) {
        texto += "Tomate, ";
        valorT = valorT + 1.00f;
        }
        if(chkPimentao.isSelected()) {
        texto += "Pimentao, ";
        valorT = valorT + 1.00f;
        }
        if (chkAzeitona.isSelected()) {
        texto += "Azeitona, ";
        valorT = valorT + 1.00f;
        }
        if (!texto.isEmpty()) {
        texto = texto.substring(0, texto.length() -2);
        }
        
/*-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------*/
        
        lblResult1.setText("<html> Pão: " +Pao+ "<br> Quantidade: " +Hamburguer+ "<br> Queijo: " +Queijo+ "<br> Molho: " +Molho+"<br> Saladas: " +texto);
        
        lblResult2.setText("R$"+valorT);
        
        
        
    }//GEN-LAST:event_bntResultActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PidaoKing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PidaoKing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PidaoKing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PidaoKing.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PidaoKing().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bntResult;
    private javax.swing.JComboBox<String> cbMolho;
    private javax.swing.JComboBox<String> cbPao;
    private javax.swing.JComboBox<String> cbQueijo;
    private javax.swing.JCheckBox chkAlface;
    private javax.swing.JCheckBox chkAzeitona;
    private javax.swing.JCheckBox chkCebola;
    private javax.swing.JCheckBox chkPepino;
    private javax.swing.JCheckBox chkPimentao;
    private javax.swing.JCheckBox chkTomate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblMolho;
    private javax.swing.JLabel lblPao;
    private javax.swing.JLabel lblQtd;
    private javax.swing.JLabel lblQueijo;
    private javax.swing.JLabel lblResult1;
    private javax.swing.JLabel lblResult2;
    private javax.swing.JLabel lblSaladas;
    private javax.swing.JSlider slQtd;
    // End of variables declaration//GEN-END:variables
}
